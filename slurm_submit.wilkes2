#!/bin/bash
#!
#! Example SLURM job script for Wilkes2 (Broadwell, ConnectX-4, P100)
#! Last updated: Mon 13 Nov 12:06:57 GMT 2017
#!

#!#############################################################
#!#### Modify the options in this section as appropriate ######
#!#############################################################

#! sbatch directives begin here ###############################
#! Name of the job:
#SBATCH -J gpujob
#! Which project should be charged (NB Wilkes2 projects end in '-GPU'):
#SBATCH -A COMPUTERLAB-SL2-GPU
#! How many whole nodes should be allocated?
#SBATCH --nodes=1
#! How many (MPI) tasks will there be in total?
#! Note probably this should not exceed the total number of GPUs in use.
#SBATCH --ntasks=1
#! Specify the number of GPUs per node (between 1 and 4; must be 4 if nodes>1).
#! Note that the job submission script will enforce no more than 3 cpus per GPU.
#SBATCH --gres=gpu:4
#! How much wallclock time will be required?
#SBATCH --time=35:00:00
#! What types of email messages do you wish to receive?
#SBATCH --mail-type=ALL
#! Uncomment this to prevent the job from being requeued (e.g. if
#! interrupted by node failure or system downtime):
##SBATCH --no-requeue

#! Do not change:
#SBATCH -p pascal

#! sbatch directives end here (put any additional directives above this line)

#! Notes:
#! Charging is determined by GPU number*walltime. 

#! Number of nodes and tasks per node allocated by SLURM (do not change):
numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
#! Modify the settings below to specify the application's environment, location 
#! and launch method:

#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel7/default-gpu              # REQUIRED - loads the basic environment
#module load python/3.6

source /home/yfn21/py36/bin/activate                   #load venv python 3.6
python --version

#! Insert additional module load commands after this line if needed:

#! Full path to application executable: 
application="main.py"

#! Run options for the application:
#options="-c taa/confs/bert_amazon_example.yaml --abspath '/home/yfn21/ondemand/data/sys/myjobs/projects/default/4/MPhil_BO' --class_imbalance 0.5 --sparsity 500 --n_aug 8 --alpha 0.05 --num-search 4"

#! Work directory (i.e. where the job will run):
workdir="$SLURM_SUBMIT_DIR"  # The value of SLURM_SUBMIT_DIR sets workdir to the directory
                             # in which sbatch is run.

#! Are you using OpenMP (NB this is unrelated to OpenMPI)? If so increase this
#! safe value to no more than 12:
export OMP_NUM_THREADS=1

#! Number of MPI tasks to be started by the application per node and in total (do not change):
np=$[${numnodes}*${mpi_tasks_per_node}]

#! Choose this for a pure shared-memory OpenMP parallel program on a single node:
#! (OMP_NUM_THREADS threads will be created):
#CMD="python $application $options"


cd $workdir


#! Choose this for a MPI code using OpenMPI:
for dataset in wiki
do
  for sparsity in 500
  do
    for class_imbalance in 0.5
    do
      options="-c taa/confs/bert_${dataset}_example.yaml --abspath '/home/yfn21/ondemand/data/sys/myjobs/projects/default/4/MPhil_BO' --class_imbalance $class_imbalance --sparsity $sparsity --n_aug 16 --alpha 0.05 --num-search 15"
      CMD="mpirun -npernode $mpi_tasks_per_node -np $np python $application $options"
      echo "Running command: $CMD"
      eval $CMD
      #srun -N1 -n1 --exclusive eval "$CMD"
    done
  done
done

#! Choose this for a MPI code using OpenMPI:
#for dataset in wiki amazon
#do
#  for sparsity in 500
#  do
#    for class_imbalance in 0.5
#    do
#      for num_search in 50 100 200  
#      do
#        options="-c taa/confs/bert_${dataset}_example.yaml --abspath '/home/yfn21/ondemand/data/sys/myjobs/projects/default/4/MPhil_BO' --class_imbalance $class_imbalance --sparsity $sparsity --n_aug 16 --alpha 0.05 --num-search $num_search"
#        CMD="mpirun -npernode $mpi_tasks_per_node -np $np python $application $options"
#        echo "Running command: $CMD"
#        eval $CMD
#        #srun -N1 -n1 --exclusive eval "$CMD"
#      done    
#    done
#  done
#done

            


###############################################################
### You should not have to change anything below this line ####
###############################################################

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

#eval $CMD 

